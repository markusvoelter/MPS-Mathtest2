package sr.math.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.SNode;
import jetbrains.mps.baseLanguage.structure.IntegerConstant;
import jetbrains.mps.baseLanguage.structure.Expression;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class Exp extends MathExpression {
  public static final String concept = "sr.math.structure.Exp";
  public static final String EXP = "exp";
  public static final String BASE = "base";

  public Exp(SNode node) {
    super(node);
  }

  public IntegerConstant getExp() {
    return (IntegerConstant) this.getChild(IntegerConstant.class, Exp.EXP);
  }

  public void setExp(IntegerConstant node) {
    super.setChild(Exp.EXP, node);
  }

  public Expression getBase() {
    return (Expression) this.getChild(Expression.class, Exp.BASE);
  }

  public void setBase(Expression node) {
    super.setChild(Exp.BASE, node);
  }

  public static Exp newInstance(SModel sm, boolean init) {
    return (Exp) SModelUtil_new.instantiateConceptDeclaration("sr.math.structure.Exp", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static Exp newInstance(SModel sm) {
    return Exp.newInstance(sm, false);
  }
}
