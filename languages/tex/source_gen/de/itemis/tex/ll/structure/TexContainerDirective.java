package de.itemis.tex.ll.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.SNode;
import java.util.Iterator;
import java.util.List;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class TexContainerDirective extends TexDirective {
  public static final String concept = "de.itemis.tex.ll.structure.TexContainerDirective";
  public static final String OPENING = "opening";
  public static final String CLOSING = "closing";
  public static final String CHILDREN = "children";

  public TexContainerDirective(SNode node) {
    super(node);
  }

  public TexHeader getOpening() {
    return (TexHeader) this.getChild(TexHeader.class, TexContainerDirective.OPENING);
  }

  public void setOpening(TexHeader node) {
    super.setChild(TexContainerDirective.OPENING, node);
  }

  public TexHeader getClosing() {
    return (TexHeader) this.getChild(TexHeader.class, TexContainerDirective.CLOSING);
  }

  public void setClosing(TexHeader node) {
    super.setChild(TexContainerDirective.CLOSING, node);
  }

  public int getChildrensCount() {
    return this.getChildCount(TexContainerDirective.CHILDREN);
  }

  public Iterator<TexDirective> childrens() {
    return this.children(TexDirective.class, TexContainerDirective.CHILDREN);
  }

  public List<TexDirective> getChildrens() {
    return this.getChildren(TexDirective.class, TexContainerDirective.CHILDREN);
  }

  public void addChildren(TexDirective node) {
    this.addChild(TexContainerDirective.CHILDREN, node);
  }

  public void insertChildren(TexDirective prev, TexDirective node) {
    this.insertChild(prev, TexContainerDirective.CHILDREN, node);
  }

  public static TexContainerDirective newInstance(SModel sm, boolean init) {
    return (TexContainerDirective) SModelUtil_new.instantiateConceptDeclaration("de.itemis.tex.ll.structure.TexContainerDirective", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static TexContainerDirective newInstance(SModel sm) {
    return TexContainerDirective.newInstance(sm, false);
  }
}
