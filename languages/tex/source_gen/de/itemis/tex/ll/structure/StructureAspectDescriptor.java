package de.itemis.tex.ll.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.ConceptDescriptor;
import java.util.Arrays;
import jetbrains.mps.smodel.runtime.impl.CompiledConceptDescriptor;
import jetbrains.mps.smodel.runtime.interpreted.StructureAspectInterpreted;

public class StructureAspectDescriptor implements jetbrains.mps.smodel.runtime.StructureAspectDescriptor {
  private static String[] stringSwitchCases_1htk8d_a0a0a = new String[]{"de.itemis.tex.ll.structure.TexContainerDirective", "de.itemis.tex.ll.structure.TexDirective", "de.itemis.tex.ll.structure.TexGroup", "de.itemis.tex.ll.structure.TexHeader", "de.itemis.tex.ll.structure.TexHeaderAttribute", "de.itemis.tex.ll.structure.TexHeaderCommand", "de.itemis.tex.ll.structure.TexNewLine", "de.itemis.tex.ll.structure.TexResource", "de.itemis.tex.ll.structure.TexSimpleDirWithText", "de.itemis.tex.ll.structure.TexSimpleDirective", "de.itemis.tex.ll.structure.TextMultiDirective", "de.itemis.tex.ll.structure.TextMultiElement", "de.itemis.tex.ll.structure.TextOnlyDirective"};

  public StructureAspectDescriptor() {
  }

  public ConceptDescriptor getDescriptor(String conceptFqName) {
    switch (Arrays.binarySearch(stringSwitchCases_1htk8d_a0a0a, conceptFqName)) {
      case 0:
        return new CompiledConceptDescriptor("de.itemis.tex.ll.structure.TexContainerDirective", "de.itemis.tex.ll.structure.TexDirective", false, new String[]{"de.itemis.tex.ll.structure.TexDirective"}, new String[]{}, new String[]{});
      case 1:
        return new CompiledConceptDescriptor("de.itemis.tex.ll.structure.TexDirective", "jetbrains.mps.lang.core.structure.BaseConcept", false, new String[]{"jetbrains.mps.lang.core.structure.BaseConcept"}, new String[]{}, new String[]{});
      case 2:
        return new CompiledConceptDescriptor("de.itemis.tex.ll.structure.TexGroup", "de.itemis.tex.ll.structure.TexDirective", false, new String[]{"de.itemis.tex.ll.structure.TexDirective"}, new String[]{}, new String[]{});
      case 3:
        return new CompiledConceptDescriptor("de.itemis.tex.ll.structure.TexHeader", "jetbrains.mps.lang.core.structure.BaseConcept", false, new String[]{"jetbrains.mps.lang.core.structure.BaseConcept", "jetbrains.mps.lang.core.structure.INamedConcept"}, new String[]{}, new String[]{});
      case 4:
        return new CompiledConceptDescriptor("de.itemis.tex.ll.structure.TexHeaderAttribute", "jetbrains.mps.lang.core.structure.BaseConcept", false, new String[]{"jetbrains.mps.lang.core.structure.BaseConcept"}, new String[]{}, new String[]{});
      case 5:
        return new CompiledConceptDescriptor("de.itemis.tex.ll.structure.TexHeaderCommand", "de.itemis.tex.ll.structure.TexHeaderAttribute", false, new String[]{"de.itemis.tex.ll.structure.TexHeaderAttribute", "jetbrains.mps.lang.core.structure.INamedConcept"}, new String[]{}, new String[]{});
      case 6:
        return new CompiledConceptDescriptor("de.itemis.tex.ll.structure.TexNewLine", "de.itemis.tex.ll.structure.TexDirective", false, new String[]{"de.itemis.tex.ll.structure.TexDirective"}, new String[]{}, new String[]{});
      case 7:
        return new CompiledConceptDescriptor("de.itemis.tex.ll.structure.TexResource", "jetbrains.mps.lang.core.structure.BaseConcept", false, new String[]{"jetbrains.mps.lang.core.structure.BaseConcept", "jetbrains.mps.lang.core.structure.INamedConcept"}, new String[]{}, new String[]{});
      case 8:
        return new CompiledConceptDescriptor("de.itemis.tex.ll.structure.TexSimpleDirWithText", "de.itemis.tex.ll.structure.TexSimpleDirective", false, new String[]{"de.itemis.tex.ll.structure.TexSimpleDirective"}, new String[]{"text"}, new String[]{});
      case 9:
        return new CompiledConceptDescriptor("de.itemis.tex.ll.structure.TexSimpleDirective", "de.itemis.tex.ll.structure.TexDirective", false, new String[]{"de.itemis.tex.ll.structure.TexDirective"}, new String[]{}, new String[]{});
      case 10:
        return new CompiledConceptDescriptor("de.itemis.tex.ll.structure.TextMultiDirective", "de.itemis.tex.ll.structure.TexDirective", false, new String[]{"de.itemis.tex.ll.structure.TexDirective"}, new String[]{}, new String[]{});
      case 11:
        return new CompiledConceptDescriptor("de.itemis.tex.ll.structure.TextMultiElement", "jetbrains.mps.lang.core.structure.BaseConcept", false, new String[]{"jetbrains.mps.lang.core.structure.BaseConcept"}, new String[]{"text"}, new String[]{});
      case 12:
        return new CompiledConceptDescriptor("de.itemis.tex.ll.structure.TextOnlyDirective", "de.itemis.tex.ll.structure.TexDirective", false, new String[]{"de.itemis.tex.ll.structure.TexDirective"}, new String[]{"text"}, new String[]{});
      default:
        return StructureAspectInterpreted.getInstance().getDescriptor(conceptFqName);
    }
  }
}
