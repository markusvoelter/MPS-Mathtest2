package sr.si.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.SNode;
import java.util.Iterator;
import java.util.List;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class CompositeUnit extends Unit {
  public static final String concept = "sr.si.structure.CompositeUnit";
  public static final String FACTORS = "factors";

  public CompositeUnit(SNode node) {
    super(node);
  }

  public int getFactorsesCount() {
    return this.getChildCount(CompositeUnit.FACTORS);
  }

  public Iterator<Unit> factorses() {
    return this.children(Unit.class, CompositeUnit.FACTORS);
  }

  public List<Unit> getFactorses() {
    return this.getChildren(Unit.class, CompositeUnit.FACTORS);
  }

  public void addFactors(Unit node) {
    this.addChild(CompositeUnit.FACTORS, node);
  }

  public void insertFactors(Unit prev, Unit node) {
    this.insertChild(prev, CompositeUnit.FACTORS, node);
  }

  public static CompositeUnit newInstance(SModel sm, boolean init) {
    return (CompositeUnit) SModelUtil_new.instantiateConceptDeclaration("sr.si.structure.CompositeUnit", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static CompositeUnit newInstance(SModel sm) {
    return CompositeUnit.newInstance(sm, false);
  }
}
