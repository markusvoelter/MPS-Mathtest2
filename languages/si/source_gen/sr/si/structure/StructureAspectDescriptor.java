package sr.si.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.ConceptDescriptor;
import java.util.Arrays;
import jetbrains.mps.smodel.runtime.impl.CompiledConceptDescriptor;
import jetbrains.mps.smodel.runtime.interpreted.StructureAspectInterpreted;

public class StructureAspectDescriptor implements jetbrains.mps.smodel.runtime.StructureAspectDescriptor {
  private static String[] stringSwitchCases_1htk8d_a0a0a = new String[]{"sr.si.structure.CompositeUnit", "sr.si.structure.CompositeUnitFraction", "sr.si.structure.Factor", "sr.si.structure.ForceUnit", "sr.si.structure.Hecto", "sr.si.structure.IReducableUnit", "sr.si.structure.Kilo", "sr.si.structure.KiloGramm", "sr.si.structure.LengthUnit", "sr.si.structure.Meter", "sr.si.structure.Newton", "sr.si.structure.NoUnit", "sr.si.structure.Pascal", "sr.si.structure.PressureUnit", "sr.si.structure.Second", "sr.si.structure.TimeUnit", "sr.si.structure.Unit", "sr.si.structure.WeightUnit"};

  public StructureAspectDescriptor() {
  }

  public ConceptDescriptor getDescriptor(String conceptFqName) {
    switch (Arrays.binarySearch(stringSwitchCases_1htk8d_a0a0a, conceptFqName)) {
      case 0:
        return new CompiledConceptDescriptor("sr.si.structure.CompositeUnit", "sr.si.structure.Unit", false, new String[]{"sr.si.structure.Unit"}, new String[]{}, new String[]{});
      case 1:
        return new CompiledConceptDescriptor("sr.si.structure.CompositeUnitFraction", "sr.si.structure.Unit", false, new String[]{"sr.si.structure.Unit"}, new String[]{}, new String[]{});
      case 2:
        return new CompiledConceptDescriptor("sr.si.structure.Factor", "jetbrains.mps.lang.core.structure.BaseConcept", false, new String[]{"jetbrains.mps.lang.core.structure.BaseConcept"}, new String[]{}, new String[]{});
      case 3:
        return new CompiledConceptDescriptor("sr.si.structure.ForceUnit", "sr.si.structure.Unit", false, new String[]{"sr.si.structure.Unit"}, new String[]{}, new String[]{});
      case 4:
        return new CompiledConceptDescriptor("sr.si.structure.Hecto", "sr.si.structure.Factor", false, new String[]{"sr.si.structure.Factor"}, new String[]{}, new String[]{});
      case 5:
        return new CompiledConceptDescriptor("sr.si.structure.IReducableUnit", null, true, new String[]{}, new String[]{}, new String[]{});
      case 6:
        return new CompiledConceptDescriptor("sr.si.structure.Kilo", "sr.si.structure.Factor", false, new String[]{"sr.si.structure.Factor"}, new String[]{}, new String[]{});
      case 7:
        return new CompiledConceptDescriptor("sr.si.structure.KiloGramm", "sr.si.structure.WeightUnit", false, new String[]{"sr.si.structure.WeightUnit"}, new String[]{}, new String[]{});
      case 8:
        return new CompiledConceptDescriptor("sr.si.structure.LengthUnit", "sr.si.structure.Unit", false, new String[]{"sr.si.structure.Unit"}, new String[]{}, new String[]{});
      case 9:
        return new CompiledConceptDescriptor("sr.si.structure.Meter", "sr.si.structure.LengthUnit", false, new String[]{"sr.si.structure.LengthUnit"}, new String[]{}, new String[]{});
      case 10:
        return new CompiledConceptDescriptor("sr.si.structure.Newton", "sr.si.structure.ForceUnit", false, new String[]{"sr.si.structure.ForceUnit", "sr.si.structure.IReducableUnit"}, new String[]{}, new String[]{});
      case 11:
        return new CompiledConceptDescriptor("sr.si.structure.NoUnit", "sr.si.structure.Unit", false, new String[]{"sr.si.structure.Unit"}, new String[]{}, new String[]{});
      case 12:
        return new CompiledConceptDescriptor("sr.si.structure.Pascal", "sr.si.structure.PressureUnit", false, new String[]{"sr.si.structure.PressureUnit", "sr.si.structure.IReducableUnit"}, new String[]{}, new String[]{});
      case 13:
        return new CompiledConceptDescriptor("sr.si.structure.PressureUnit", "sr.si.structure.Unit", false, new String[]{"sr.si.structure.Unit"}, new String[]{}, new String[]{});
      case 14:
        return new CompiledConceptDescriptor("sr.si.structure.Second", "sr.si.structure.TimeUnit", false, new String[]{"sr.si.structure.TimeUnit"}, new String[]{}, new String[]{});
      case 15:
        return new CompiledConceptDescriptor("sr.si.structure.TimeUnit", "sr.si.structure.Unit", false, new String[]{"sr.si.structure.Unit"}, new String[]{}, new String[]{});
      case 16:
        return new CompiledConceptDescriptor("sr.si.structure.Unit", "jetbrains.mps.lang.core.structure.BaseConcept", false, new String[]{"jetbrains.mps.lang.core.structure.BaseConcept"}, new String[]{}, new String[]{});
      case 17:
        return new CompiledConceptDescriptor("sr.si.structure.WeightUnit", "sr.si.structure.Unit", false, new String[]{"sr.si.structure.Unit"}, new String[]{}, new String[]{});
      default:
        return StructureAspectInterpreted.getInstance().getDescriptor(conceptFqName);
    }
  }
}
