package sr.functionblocks.structure;

/*Generated by MPS */

import jetbrains.mps.lang.core.structure.BaseConcept;
import jetbrains.mps.smodel.SNode;
import java.util.Iterator;
import java.util.List;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class FunctionUnitTestBlock extends BaseConcept {
  public static final String concept = "sr.functionblocks.structure.FunctionUnitTestBlock";
  public static final String TESTS = "tests";

  public FunctionUnitTestBlock(SNode node) {
    super(node);
  }

  public int getTestsesCount() {
    return this.getChildCount(FunctionUnitTestBlock.TESTS);
  }

  public Iterator<FunctionUnitTest> testses() {
    return this.children(FunctionUnitTest.class, FunctionUnitTestBlock.TESTS);
  }

  public List<FunctionUnitTest> getTestses() {
    return this.getChildren(FunctionUnitTest.class, FunctionUnitTestBlock.TESTS);
  }

  public void addTests(FunctionUnitTest node) {
    this.addChild(FunctionUnitTestBlock.TESTS, node);
  }

  public void insertTests(FunctionUnitTest prev, FunctionUnitTest node) {
    this.insertChild(prev, FunctionUnitTestBlock.TESTS, node);
  }

  public static FunctionUnitTestBlock newInstance(SModel sm, boolean init) {
    return (FunctionUnitTestBlock) SModelUtil_new.instantiateConceptDeclaration("sr.functionblocks.structure.FunctionUnitTestBlock", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static FunctionUnitTestBlock newInstance(SModel sm) {
    return FunctionUnitTestBlock.newInstance(sm, false);
  }
}
