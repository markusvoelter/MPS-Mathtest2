package sr.functionblocks.structure;

/*Generated by MPS */

import jetbrains.mps.baseLanguage.structure.Statement;
import jetbrains.mps.baseLanguage.structure.IValidIdentifier;
import jetbrains.mps.smodel.SNode;
import java.util.Iterator;
import java.util.List;
import jetbrains.mps.lang.core.structure.Attribute;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class JValueSet extends Statement implements IValidIdentifier {
  public static final String concept = "sr.functionblocks.structure.JValueSet";
  public static final String NAME = "name";
  public static final String SHORT_DESCRIPTION = "shortDescription";
  public static final String ALIAS = "alias";
  public static final String VIRTUAL_PACKAGE = "virtualPackage";
  public static final String VALUES = "values";
  public static final String SMODEL_ATTRIBUTE = "smodelAttribute";

  public JValueSet(SNode node) {
    super(node);
  }

  public String getName() {
    return this.getProperty(JValueSet.NAME);
  }

  public void setName(String value) {
    this.setProperty(JValueSet.NAME, value);
  }

  public String getShortDescription() {
    return this.getProperty(JValueSet.SHORT_DESCRIPTION);
  }

  public void setShortDescription(String value) {
    this.setProperty(JValueSet.SHORT_DESCRIPTION, value);
  }

  public String getAlias() {
    return this.getProperty(JValueSet.ALIAS);
  }

  public void setAlias(String value) {
    this.setProperty(JValueSet.ALIAS, value);
  }

  public String getVirtualPackage() {
    return this.getProperty(JValueSet.VIRTUAL_PACKAGE);
  }

  public void setVirtualPackage(String value) {
    this.setProperty(JValueSet.VIRTUAL_PACKAGE, value);
  }

  public int getValuesesCount() {
    return this.getChildCount(JValueSet.VALUES);
  }

  public Iterator<JValueDefinition> valueses() {
    return this.children(JValueDefinition.class, JValueSet.VALUES);
  }

  public List<JValueDefinition> getValueses() {
    return this.getChildren(JValueDefinition.class, JValueSet.VALUES);
  }

  public void addValues(JValueDefinition node) {
    this.addChild(JValueSet.VALUES, node);
  }

  public void insertValues(JValueDefinition prev, JValueDefinition node) {
    this.insertChild(prev, JValueSet.VALUES, node);
  }

  public int getSmodelAttributesCount() {
    return this.getChildCount(JValueSet.SMODEL_ATTRIBUTE);
  }

  public Iterator<Attribute> smodelAttributes() {
    return this.children(Attribute.class, JValueSet.SMODEL_ATTRIBUTE);
  }

  public List<Attribute> getSmodelAttributes() {
    return this.getChildren(Attribute.class, JValueSet.SMODEL_ATTRIBUTE);
  }

  public void addSmodelAttribute(Attribute node) {
    this.addChild(JValueSet.SMODEL_ATTRIBUTE, node);
  }

  public void insertSmodelAttribute(Attribute prev, Attribute node) {
    this.insertChild(prev, JValueSet.SMODEL_ATTRIBUTE, node);
  }

  public static JValueSet newInstance(SModel sm, boolean init) {
    return (JValueSet) SModelUtil_new.instantiateConceptDeclaration("sr.functionblocks.structure.JValueSet", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static JValueSet newInstance(SModel sm) {
    return JValueSet.newInstance(sm, false);
  }
}
