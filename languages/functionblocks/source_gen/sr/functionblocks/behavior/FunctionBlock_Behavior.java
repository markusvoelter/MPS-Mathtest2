package sr.functionblocks.behavior;

/*Generated by MPS */

import jetbrains.mps.smodel.SNode;
import jetbrains.mps.internal.collections.runtime.Sequence;
import jetbrains.mps.internal.collections.runtime.IWhereFilter;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations;
import jetbrains.mps.internal.collections.runtime.ISelector;
import java.util.List;
import java.util.ArrayList;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;

public class FunctionBlock_Behavior {
  public static void init(SNode thisNode) {
  }

  public static Iterable<SNode> virtual_exportedSymbols_7691223970092868586(SNode thisNode) {
    return Sequence.fromIterable(Block_Behavior.call_symbols_7691223970092892420(thisNode)).where(new IWhereFilter<SNode>() {
      public boolean accept(SNode it) {
        return SNodeOperations.isInstanceOf(it, "sr.functionblocks.structure.FunctionSymbol") && SPropertyOperations.getBoolean(SNodeOperations.cast(it, "sr.functionblocks.structure.FunctionSymbol"), "exported");
      }
    });
  }

  public static Iterable<SNode> call_exportedFunctions_3006277004735790064(SNode thisNode) {
    return Sequence.fromIterable(Block_Behavior.call_exportedSymbols_7691223970092868586(thisNode)).select(new ISelector<SNode, SNode>() {
      public SNode select(SNode it) {
        return SNodeOperations.cast(it, "sr.functionblocks.structure.FunctionSymbol");
      }
    });
  }

  public static Iterable<SNode> call_functions_3893397118698831680(SNode thisNode) {
    return Sequence.fromIterable(Block_Behavior.call_symbols_7691223970092892420(thisNode)).where(new IWhereFilter<SNode>() {
      public boolean accept(SNode it) {
        return SNodeOperations.isInstanceOf(it, "sr.functionblocks.structure.FunctionSymbol");
      }
    }).select(new ISelector<SNode, SNode>() {
      public SNode select(SNode it) {
        return SNodeOperations.cast(it, "sr.functionblocks.structure.FunctionSymbol");
      }
    });
  }

  public static Iterable<SNode> call_visibleSymbols_7691223970092901897(SNode thisNode) {
    List<SNode> res = new ArrayList<SNode>();
    ListSequence.fromList(res).addSequence(Sequence.fromIterable(Block_Behavior.call_symbols_7691223970092892420(thisNode)));
    for (SNode br : ListSequence.fromList(SLinkOperations.getTargets(thisNode, "importedBlocks", true))) {
      ListSequence.fromList(res).addSequence(Sequence.fromIterable(Block_Behavior.call_exportedSymbols_7691223970092868586(SLinkOperations.getTarget(br, "block", false))));
    }
    return res;
  }
}
