package sr.functionblocks.behavior;

/*Generated by MPS */

import jetbrains.mps.smodel.SNode;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.internal.collections.runtime.IWhereFilter;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import jetbrains.mps.internal.collections.runtime.ISelector;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations;
import jetbrains.mps.smodel.structure.BehaviorDescriptor;
import jetbrains.mps.smodel.structure.ConceptRegistry;
import jetbrains.mps.smodel.behaviour.BehaviorManager;

public class Block_Behavior {
  private static Class[] PARAMETERS_7691223970092868586 = {SNode.class};

  public static void init(SNode thisNode) {
  }

  public static Iterable<SNode> call_symbols_7691223970092892420(SNode thisNode) {
    return ListSequence.fromList(SLinkOperations.getTargets(thisNode, "contents", true)).where(new IWhereFilter<SNode>() {
      public boolean accept(SNode it) {
        return SNodeOperations.isInstanceOf(it, "sr.functionblocks.structure.Symbol");
      }
    }).select(new ISelector<SNode, SNode>() {
      public SNode select(SNode it) {
        return SNodeOperations.cast(it, "sr.functionblocks.structure.Symbol");
      }
    });
  }

  public static String call_javaName_3006277004735707306(SNode thisNode) {
    return SPropertyOperations.getString(thisNode, "name").replaceAll(" ", "");
  }

  public static Iterable<SNode> call_exportedSymbols_7691223970092868586(SNode thisNode) {
    BehaviorDescriptor descriptor = ConceptRegistry.getInstance().getBehaviorDescriptorForInstanceNode(thisNode);
    return (Iterable<SNode>) descriptor.invoke(Object.class, SNodeOperations.cast(thisNode, "sr.functionblocks.structure.Block"), "virtual_exportedSymbols_7691223970092868586", PARAMETERS_7691223970092868586);
  }

  public static Iterable<SNode> callSuper_exportedSymbols_7691223970092868586(SNode thisNode, String callerConceptFqName) {
    return (Iterable<SNode>) BehaviorManager.getInstance().invokeSuper(Object.class, SNodeOperations.cast(thisNode, "sr.functionblocks.structure.Block"), callerConceptFqName, "virtual_exportedSymbols_7691223970092868586", PARAMETERS_7691223970092868586);
  }
}
