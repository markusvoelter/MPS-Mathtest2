package sr.functionblocks.intentions;

/*Generated by MPS */

import jetbrains.mps.intentions.BaseIntention;
import jetbrains.mps.intentions.Intention;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.nodeEditor.EditorContext;
import jetbrains.mps.internal.collections.runtime.Sequence;
import sr.functionblocks.behavior.Block_Behavior;
import jetbrains.mps.internal.collections.runtime.IVisitor;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;

public class hideAllTests_Intention extends BaseIntention implements Intention {
  public hideAllTests_Intention() {
  }

  public String getConcept() {
    return "sr.functionblocks.structure.FunctionBlock";
  }

  public boolean isParameterized() {
    return false;
  }

  public boolean isErrorIntention() {
    return false;
  }

  public boolean isAvailableInChildNodes() {
    return true;
  }

  public String getDescription(final SNode node, final EditorContext editorContext) {
    return "hide all tests";
  }

  public void execute(final SNode node, final EditorContext editorContext) {
    Sequence.fromIterable(Block_Behavior.call_symbols_7691223970092892420(node)).visitAll(new IVisitor<SNode>() {
      public void visit(SNode it) {
        SPropertyOperations.set(SNodeOperations.cast(it, "sr.functionblocks.structure.FunctionSymbol"), "showTests", "" + false);
      }
    });
  }

  public String getLocationString() {
    return "sr.functionblocks.intentions";
  }
}
